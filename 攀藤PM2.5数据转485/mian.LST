C51 COMPILER V9.59.0.0   MIAN                                                              10/08/2018 08:17:36 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MIAN
OBJECT MODULE PLACED IN mian.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE mian.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /*---------------------------------------------------------------------*/
   2          /* --- STC MCU Limited ------------------------------------------------*/
   3          /* --- STC15F4K60S4 系列 定时器2用作串口1的波特率发生器举例------------*/
   4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
   5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
   6          /* --- Tel: 86-0513-55012928,55012929,55012966-------------------------*/
   7          /* --- Web: www.STCMCU.com --------------------------------------------*/
   8          /* --- Web: www.GXWMCU.com --------------------------------------------*/
   9          /* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序        */
  10          /* 如果要在文章中应用此代码,请在文章中注明使用了STC的资料及程序        */
  11          /*---------------------------------------------------------------------*/
  12          
  13          //本示例在Keil开发环境下请选择Intel的8058芯片型号进行编译
  14          //若无特别说明,工作频率一般为11.0592MHz
  15          
  16          #include "stc15.h"
  17          #include "intrins.h"
  18          
  19          typedef unsigned char BYTE;
  20          typedef unsigned int WORD;
  21          typedef bit BOOL;
  22          
  23          #define FOSC 11059200L          //系统频率
  24          #define BAUD_physic 9600             //串口波特率
  25          #define BAUD  0xFE80                  // 9600bps @ 11.0592MHz
  26          
  27          #define S1_S0 0x40              //P_SW1.6
  28          #define S1_S1 0x80              //P_SW1.7
  29          
  30          sbit RXB = P5 ^ 5;                      //define UART TX/RX port
  31          sbit LED = P3 ^ 3;
  32          sbit EN_485 = P3 ^ 2;
  33          bit busy;
  34          bit get_data;
  35          bit addr_ok = 0;
  36          
  37          BYTE ADDR = 0x04;  //0000 0100
  38          BYTE RBUF;     //发送/接收缓存
  39          BYTE RDAT;     //发送/接收数据
  40          BYTE RCNT;
  41          BYTE RBIT;     //发送/接收停止位
  42          BOOL RING;     //正在发送/接收
  43          BOOL REND;     //发送/接收完成
  44          
  45          WORD times = 0;
  46          BYTE t;
  47          //串口数据计数
  48          BYTE count = 0;
  49          BYTE count_485 = 0;
  50          //485接口输入信息
  51          BYTE data_485[8] = {0};
  52          //485接口输出信息缓存
  53          BYTE buf[11] = {0};
  54          //地址信息
  55          BYTE buf_addr[8] = {0};
C51 COMPILER V9.59.0.0   MIAN                                                              10/08/2018 08:17:36 PAGE 2   

  56          //pm2.5数据
  57          BYTE pm_data[32] = {0};
  58          
  59          //模拟串口初始化
  60          void UART_INIT();
  61          //定时器0初始化
  62          void Timer0_INIT();
  63          //保存模拟串口数据
  64          void Save_RXB_data();
  65          //模拟串口数据输出
  66          void Send_TXB_data();
  67          //物理串口数据输出
  68          void SendData(BYTE dat);
  69          void SendString(char *s);
  70          //将485数据输出
  71          void SendData_485(BYTE *ptr, int len);
  72          void SendPmInfo();
  73          void SendAddrInfo();
  74          //计算CRC校验位
  75          unsigned int calc_crc(BYTE *ptr, int len);
  76          
  77          void main()
  78          {
  79   1          int CRC;
  80   1          P3M1 = 0x00;
  81   1          P3M0 = 0x08;
  82   1          EN_485 = 0;
  83   1          WDT_CONTR = 0x24;                               //看门狗启动，约1.14s后复位
  84   1          UART_INIT();
  85   1          ACC = P_SW1;
  86   1          ACC &= ~(S1_S0 | S1_S1);                        //S1_S0=0 S1_S1=0
  87   1          P_SW1 = ACC;                                    //(P3.0/RxD, P3.1/TxD)
  88   1          SCON = 0x50;                                    //8位可变波特率
  89   1          Timer0_INIT();
  90   1          ES = 1;                                         //使能串口1中断
  91   1          EA = 1;
  92   1          SendString("MCU START OK!\r\n");
  93   1          while (1)
  94   1          {
  95   2              if (get_data && (data_485[0] == ADDR))  
  96   2              {
  97   3                  CRC = calc_crc(data_485, 6);
  98   3                  if (((CRC & 0xff) == data_485[6]) && ((CRC >> 8) & 0xff) == data_485[7])
  99   3                  {
 100   4                      switch(data_485[1])
 101   4                      {
 102   5                      case 0x03:
 103   5                          SendPmInfo();
 104   5                          break;
 105   5                      case 0x06:
 106   5                          SendAddrInfo();
 107   5                          break;
 108   5                      default:
 109   5                          break;
 110   5                      }
 111   4                  }
 112   3              }
 113   2              if (REND)
 114   2              {
 115   3                  REND = 0;
 116   3                  Save_RXB_data();
 117   3              }
C51 COMPILER V9.59.0.0   MIAN                                                              10/08/2018 08:17:36 PAGE 3   

 118   2              //喂狗
 119   2              WDT_CONTR |= 0x10;
 120   2              if(times == 65535)
 121   2              {
 122   3                  LED = ~LED;
 123   3                  times = 0;
 124   3              }
 125   2              times ++;
 126   2          }
 127   1      }
 128          
 129          /*----------------------------
 130          UART 中断服务程序
 131          -----------------------------*/
 132          void Uart() interrupt 4 using 1
 133          {
 134   1          if (RI)
 135   1          {
 136   2              RI = 0;                 //清除RI位
 137   2              if (count_485 == 0)
 138   2              {
 139   3                  data_485[0] = SBUF;
 140   3                  if (data_485[0] == ADDR)
 141   3                  {
 142   4                      count_485++;
 143   4                  }
 144   3              }
 145   2              else if (count_485 == 1)
 146   2              {
 147   3                  if (SBUF == 0x03 || SBUF == 0x06)
 148   3                  {
 149   4                      data_485[count_485] = SBUF;
 150   4                      count_485 ++;
 151   4                  }
 152   3                  else
 153   3                  {
 154   4                      count_485 = 0;
 155   4                  }
 156   3              }
 157   2              else if (1 < count_485 && count_485 < 7)
 158   2              {
 159   3      
 160   3                  data_485[count_485] = SBUF;
 161   3                  count_485 ++;
 162   3              }
 163   2              else if (count_485 >= 7)
 164   2              {
 165   3                  data_485[count_485] = SBUF;
 166   3                  addr_ok = 0;
 167   3                  count_485 = 0;
 168   3                  get_data = 1;
 169   3              }
 170   2          }
 171   1          if (TI)
 172   1          {
 173   2              TI = 0;
 174   2              busy = 0;
 175   2          }
 176   1      }
 177          
 178          /*----------------------------
 179          发送串口数据
C51 COMPILER V9.59.0.0   MIAN                                                              10/08/2018 08:17:36 PAGE 4   

 180          ----------------------------*/
 181          void SendData(BYTE dat)
 182          {
 183   1          while (busy);
 184   1          busy = 1;
 185   1          SBUF = dat;                 //写数据到UART数据寄存器
 186   1      }
 187          
 188          /*----------------------------
 189          发送字符串
 190          ----------------------------*/
 191          void SendString(char *s)
 192          {
 193   1          while (*s)                  //检测字符串结束标志
 194   1          {
 195   2              SendData(*s++);         //发送当前字符
 196   2          }
 197   1      }
 198          
 199          //-----------------------------------------
 200          //Timer interrupt routine for UART
 201          
 202          void tm0() interrupt 1 using 1
 203          {
 204   1          if (RING)
 205   1          {
 206   2              if (--RCNT == 0)
 207   2              {
 208   3                  RCNT = 3;                   //reset send baudrate counter
 209   3                  if (--RBIT == 0)
 210   3                  {
 211   4                      RBUF = RDAT;            //save the data to RBUF
 212   4                      RING = 0;               //stop receive
 213   4                      REND = 1;               //set receive completed flag
 214   4                  }
 215   3                  else
 216   3                  {
 217   4                      RDAT >>= 1;
 218   4                      if (RXB) RDAT |= 0x80;  //shift RX data to RX buffer
 219   4                  }
 220   3              }
 221   2          }
 222   1          else if (!RXB)
 223   1          {
 224   2              RING = 1;                       //set start receive flag
 225   2              RCNT = 4;                       //initial receive baudrate counter
 226   2              RBIT = 9;                       //initial receive bit number (8 data bits + 1 stop bit)
 227   2          }
 228   1      }
 229          
 230          //initial UART module variable
 231          //串口只接收
 232          
 233          void UART_INIT()
 234          {
 235   1          RING = 0;
 236   1          REND = 0;
 237   1          RCNT = 0;
 238   1      }
 239          //initial timer0
 240          //为模拟串口提供时钟信号
 241          void Timer0_INIT()
C51 COMPILER V9.59.0.0   MIAN                                                              10/08/2018 08:17:36 PAGE 5   

 242          {
 243   1          TMOD = 0x00;                        //timer0 in 16位自动重装
 244   1          TL0 = BAUD;
 245   1          TH0 = BAUD >> 8;                    //initial timer0 设置重装值
 246   1          T2L = (65536 - (FOSC / 4 / BAUD_physic));       //设置波特率重装值
 247   1          T2H = (65536 - (FOSC / 4 / BAUD_physic)) >> 8;
 248   1          AUXR = 0x14;                                    //T2为1T模式, 并启动定时器2
 249   1          AUXR |= 0x01;                                   //选择定时器2为串口1的波特率发生器
 250   1          AUXR |= 0x80;                        //timer0 working at 1T mode
 251   1          TR0 = 1;                                        //tiemr0 start running
 252   1          ET0 = 1;                                        //enable timer0 interrupt
 253   1          PT0 = 1;                                        //improve timer0 interrupt priority
 254   1      }
 255          
 256          //保存模拟串口数据
 257          void Save_RXB_data()
 258          {
 259   1          if (count == 0 && RBUF == 0x42)
 260   1          {
 261   2              pm_data[count] = RBUF;
 262   2              count ++;
 263   2          }
 264   1          else if (count == 1 && RBUF == 0x4d)
 265   1          {
 266   2              pm_data[count] = RBUF;
 267   2              count ++;
 268   2          }
 269   1          else if (count > 1 && count < 31)
 270   1          {
 271   2              if (pm_data[count] == 0x4d && pm_data[count - 1] == 0x42)
 272   2              {
 273   3                  count = 1;
 274   3                  pm_data[0] = 0x42;
 275   3                  pm_data[1] = 0x4d;
 276   3              }
 277   2              else
 278   2              {
 279   3                  pm_data[count] = RBUF;
 280   3                  count ++;
 281   3              }
 282   2          }
 283   1          else if (count >= 31)
 284   1          {
 285   2              pm_data[31] = RBUF;
 286   2              count = 0;
 287   2          }
 288   1          else
 289   1          {
 290   2              return;
 291   2          }
 292   1      }
 293          
 294          //物理串口发送pm2.5数据
 295          void SendPmInfo()
 296          {
 297   1          unsigned int crc;
 298   1          buf[0] = ADDR;
 299   1          buf[1] = 0x03;
 300   1          buf[2] = 0x06;
 301   1          // buf[3] = pm_data[4];
 302   1          // buf[4] = pm_data[5];
 303   1          // buf[5] = pm_data[6];
C51 COMPILER V9.59.0.0   MIAN                                                              10/08/2018 08:17:36 PAGE 6   

 304   1          // buf[6] = pm_data[7];
 305   1          // buf[7] = pm_data[8];
 306   1          // buf[8] = pm_data[9];
 307   1          buf[3] = pm_data[10];
 308   1          buf[4] = pm_data[11];
 309   1          buf[5] = pm_data[12];
 310   1          buf[6] = pm_data[13];
 311   1          buf[7] = pm_data[14];
 312   1          buf[8] = pm_data[15];
 313   1          crc = calc_crc(buf, 9);
 314   1          buf[9] = crc;
 315   1          buf[10] = crc >> 8;
 316   1          SendData_485(buf, 11);
 317   1      }
 318          
 319          void SendAddrInfo()
 320          {
 321   1          unsigned int crc;
 322   1          buf[0] = 0x04;
 323   1          buf[1] = 0x06;
 324   1          buf[2] = 0x00;
 325   1          buf[3] = 0x00;
 326   1          buf[4] = 0x00;
 327   1          buf[5] = 0x00;
 328   1          crc = calc_crc(buf_addr, 6);
 329   1          buf[6] = crc;
 330   1          buf[7] = crc >> 8;
 331   1          SendData_485(buf_addr, 8);
 332   1      }
 333          
 334          void SendData_485(BYTE *ptr, int len)
 335          {
 336   1          int i;
 337   1          EN_485 = 1;
 338   1          _nop_();
 339   1          _nop_();
 340   1          for (i = 0; i < len; i++)
 341   1          {
 342   2              SBUF = *ptr;
 343   2              while (!TI);
 344   2              if (TI)
 345   2              {
 346   3                  TI = 0;
 347   3              }
 348   2              ptr++;
 349   2          }
 350   1          EN_485 = 0;
 351   1          get_data = 0;
 352   1      }
 353          
 354          unsigned int calc_crc(BYTE *ptr, int len)
 355          {
 356   1          int j, k;
 357   1          unsigned int c, crc = 0xFFFF;
 358   1          //计算CRC
 359   1          for (k = 0; k < len; k++)
 360   1          {
 361   2              c = *ptr & 0x00FF;
 362   2              crc ^= c;
 363   2              ptr++;
 364   2              for(j = 0; j < 8; j++)
 365   2              {
C51 COMPILER V9.59.0.0   MIAN                                                              10/08/2018 08:17:36 PAGE 7   

 366   3                  if (crc & 0x0001)
 367   3                  {
 368   4                      crc >>= 1;
 369   4                      crc ^= 0xA001;
 370   4                  }
 371   3                  else crc >>= 1;
 372   3              }
 373   2          }
 374   1          return(crc);
 375   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    787    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     69      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      5    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
